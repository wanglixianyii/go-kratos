// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

func wireApp(confServer *conf.Server, confData *conf.Data, auth *conf.Auth, confService *conf.Service, registry *conf.Registry, logger log.Logger) (*kratos.App, func(), error) {
	discovery := data.NewDiscovery(registry)
	userClient := data.NewUserServiceClient(confService, discovery)
	dataData, err := data.NewData(confData, userClient, logger)
	if err != nil {
		return nil, nil, err
	}
	userRepo := data.NewUserRepo(dataData, logger)
	userUseCase := biz.NewUserUseCase(userRepo, logger, userClient, auth)
	adminService := service.NewAdminService(userUseCase, logger)
	httpServer := server.NewHTTPServer(confServer, auth, adminService, logger)
	registrar := data.NewRegistrar(registry)
	kafkaRepo := data.NewKafkaRepo(dataData, logger)
	kafkaUseCase := biz.NewKafkaUseCase(kafkaRepo, logger)
	loggerJobService := service.NewLoggerJobService(kafkaUseCase, logger)
	rocketmqServer := server.NewRocketmqServer(confServer, loggerJobService, logger)
	app := newApp(logger, httpServer, registrar, rocketmqServer)
	return app, func() {
	}, nil
}
